"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatSpacePledged = exports.formatTokenAmount = exports.parseTokenAmount = void 0;
const number_1 = require("./constants/number");
const token_1 = require("./constants/token");
const parseTokenAmount = (amount, decimals = token_1.DEFAULT_TOKEN_DECIMALS) => {
    if (typeof amount === 'bigint')
        return amount / BigInt(Math.pow(10, decimals));
    return parseFloat(amount) / Math.pow(10, decimals);
};
exports.parseTokenAmount = parseTokenAmount;
const formatTokenAmount = (amount, decimals = token_1.DEFAULT_TOKEN_DECIMALS) => {
    if (typeof amount === 'bigint')
        return amount * BigInt(Math.pow(10, decimals));
    return amount * Math.pow(10, decimals);
};
exports.formatTokenAmount = formatTokenAmount;
const formatSpacePledged = (value, decimals = 2) => {
    if (typeof value !== 'bigint' || value === number_1.BIGINT_ZERO)
        return '0 Bytes';
    const k = 1024;
    const dm = decimals < 0 ? 0 : decimals;
    const sizes = ['Bytes', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];
    const i = Math.floor(Math.log(Number(value)) / Math.log(k));
    return (Number(value) / Math.pow(k, i)).toFixed(dm) + ' ' + sizes[i];
};
exports.formatSpacePledged = formatSpacePledged;
